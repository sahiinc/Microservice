spring.main.banner-mode=off

server.address=localhost
server.port=2022

spring.application.name=lottery-consumer

eureka.client.service-url.defaultZone=http://localhost:4040/eureka
eureka.instance.lease-expiration-duration-in-seconds=1
eureka.instance.lease-renewal-interval-in-seconds=2
eureka.instance.hostname=localhost

resilience4j.retry.instances.lottery.max-attempts=3
resilience4j.retry.instances.lottery.wait-duration=1s
resilience4j.retry.instances.lottery.retry-exceptions=java.lang.Throwable
resilience4j.retry.instances.lottery.enable-exponential-backoff=true
resilience4j.retry.instances.lottery.exponential-backoff-multiplier=2

resilience4j.ratelimiter.instances.lottery.limit-refresh-period=10s
resilience4j.ratelimiter.instances.lottery.limit-for-period=2


#circuit-breaker configuration
# closed -- errors more than 20% --> open -- after 4s --> half-open -- after 8 successful calls --> closed
#                                      /\                  after 10s      
#                                       |----------------------|  
resilience4j.circuitbreaker.instances.lottery.failure-rate-threshold=20
resilience4j.circuitbreaker.instances.lottery.wait-duration-in-open-state=4s
resilience4j.circuitbreaker.instances.lottery.permitted-number-of-calls-in-half-open-state=8
resilience4j.circuitbreaker.instances.lottery.max-wait-duration-in-half-open-state=10s

resilience4j.bulkhead.instances.lottery.max-concurrent-calls=4
resilience4j.bulkhead.instances.lottery.max-wait-duration=2s
resilience4j.bulkhead.instances.lottery.event-consumer-buffer-size=10

resilience4j.timelimiter.instances.lottery.timeout-duration=5s